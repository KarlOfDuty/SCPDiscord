#####################################################################################################################
#                                                                                                                   #
#                                                     EVENTS                                                        #
#                                                                                                                   #
#   message: The message to be displayed. Variables are inserted in the format <var:name>, such as <var:ipaddress>. #
#   regex: A regular expression paired with a replacement string to find and replace parts of a message.            #
#                                                                                                                   #
#####################################################################################################################

# Executed after variables have been inserted but before the message specific regex replacement and before player names have been added on all messages.
global_regex: [

  # Fix formatting issues
  "::ffff:":"",
  " \\(\\)":"",
  "''":"",
  "<color=.{1,10}>":"",
  "</color>":"",
  "SCP_":"SCP-",

  # Teams
  #"SCPs":"",
  "FoundationForces":"MTF",
  "ChaosInsurgency":"Chaos Insurgency",
  #"Scientists":"",
  "ClassD":"D-Class",
  #"Dead":"",
  "OtherAlive":"Other Team",

  # Roles
  #"None":"",
  "Scp173":"SCP-173",
  #"ClassD":"",
  #"Spectator":"",
  "Scp106":"SCP-106",
  "NtfSpecialist":"MTF Specialist",
  "Scp049":"SCP-049",
  #"Scientist":"",
  "Scp079":"SCP-079",
  "ChaosConscript":"Chaos Conscript",
  "Scp096":"SCP-096",
  "SCP-0492":"SCP-049-2",
  "NtfSergeant":"MTF Sergeant",
  "NtfCaptain":"MTF Captain",
  "NtfPrivate":"MTF Private",
  #"Tutorial":"",
  "FacilityGuard":"Facility Guard",
  "Scp939":"SCP-939",
  #"CustomRole":"",
  "ChaosRifleman":"Chaos Rifleman",
  "ChaosRepressor":"Chaos Repressor",
  "ChaosMarauder":"Chaos Marauder",
  #"Overwatch":"",
  #"Filmmaker":"",
  "Scp3114":"SCP-3114",
  #"Flamingo":"",
  "AlphaFlamingo":"Alpha Flamingo",
  "ZombieFlamingo":"Zombie Flamingo",

  # Elevators
  "GateA":"gate A",
  "GateB":"gate B",
  "LczA01":"LCZ A1",
  "LczA02":"LCZ A2",
  "LczB01":"LCZ B1",
  "LczB02":"LCZ B2",
  "Nuke":"alpha warhead",
  #"Scp049":"",

  # Room names
  "Unnamed":"an unnamed room",
  "LczClassDSpawn":"D-class cells",
  "LczComputerRoom":"the LCZ computer room",
  "LczCheckpointA":"checkpoint A",
  "LczCheckpointB":"checkpoint B",
  "LczToilets":"the LCZ toilets",
  "LczArmory":"the LCZ armory",
  "Lcz173":"SCP-173 containment",
  "LczGlassroom":"SCP-372 containment",
  "Lcz330":"SCP-330 containment",
  "Lcz914":"SCP-914 containment",
  "LczGreenhouse":"the LCZ greenhouse",
  "LczAirlock":"a LCZ airlock",
  "HczCheckpointToEntranceZone":"entrance zone checkpoint",
  "HczCheckpointA":"HCZ checkpoint A",
  "HczCheckpointB":"HCZ checkpoint B",
  "HczWarhead":"the warhead silo",
  "Hcz049":"SCP-049 containment",
  "Hcz079":"SCP-079 containment",
  "Hcz096":"SCP-096 containment",
  "Hcz106":"SCP-106 containment",
  "Hcz939":"SCP-939 containment",
  "HczMicroHID":"the Micro-HID armory",
  "HczArmory":"the HCZ armory",
  "HczServers":"the server room",
  "HczTesla":"a tesla gate corridor",
  "EzCollapsedTunnel":"a collapsed entrance zone tunnel",
  "EzGateA":"gate A",
  "EzGateB":"gate B",
  "EzRedroom":"a locked gate room",
  "EzEvacShelter":"the evac shelter",
  "EzIntercom":"the intercom",
  "EzOfficeStoried":"an office",
  "EzOfficeLarge":"an office",
  "EzOfficeSmall":"an office",
  "Outside":"the outside area",
  "Pocket":"the pocket dimension",
  "HczTestroom":"the HCZ test room",

  # Items
  #"None":"",
  "KeycardJanitor":"Janitor keycard",
  "KeycardScientist":"Scientist keycard",
  "KeycardResearchCoordinator":"Research Coordinator keycard",
  "KeycardZoneManager":"Zone Manager keycard",
  "KeycardGuard":"Guard keycard",
  "KeycardMTFPrivate":"MTF Private keycard",
  "KeycardContainmentEngineer":"Containment Engineer keycard",
  "KeycardMTFOperative":"MTF Operative keycard",
  "KeycardMTFCaptain":"MTF Captain keycard",
  "KeycardFacilityManager":"Facility Manager keycard",
  "KeycardChaosInsurgency":"Chaos Insurgency device",
  "KeycardO5":"O5 keycard",
  "Radio":"radio",
  "GunCOM15":"COM-15",
  "Medkit":"medkit",
  "Flashlight":"flashlight",
  "MicroHID":"Micro-H.I.D.",
  "SCP500":"SCP-500",
  "SCP207":"SCP-207",
  "Ammo12gauge":"12 gauge ammo",
  "GunE11SR":"Epsilon-11 SR",
  "GunCrossvec":"Crossvec",
  "Ammo556x45":"5.56mm ammo",
  "GunFSP9":"FSP-9",
  "GunLogicer":"Logicer",
  "GrenadeHE":"grenade",
  "GrenadeFlash":"flashbang",
  "Ammo44cal":"44 cal ammo",
  "Ammo762x39":"7.62mm ammo",
  "Ammo9x19":"9mm ammo",
  "GunCOM18":"COM-18",
  "SCP018":"SCP-018",
  "SCP268":"SCP-268",
  "Adrenaline":"adrenaline",
  "Painkillers":"painkillers",
  "Coin":"coin",
  "ArmorLight":"light armor",
  "ArmorCombat":"combat armor",
  "ArmorHeavy":"heavy armor",
  "GunRevolver":"revolver",
  "GunAK":"AK",
  "GunShotgun":"shotgun",
  "SCP330":"SCP-330",
  "SCP2176":"SCP-2176",
  "SCP244a":"SCP-244-A",
  "SCP244b":"SCP-244-B",
  "SCP1853":"SCP-1853",
  "ParticleDisruptor":"particle disruptor",
  "GunCom45":"COM-45",
  "SCP1576":"SCP-1576",
  "Jailbird":"jailbird",
  "AntiSCP207":"SCP-207?",
  "GunFRMG0":"FR-MG-0",
  "GunA7":"A7",
  "Lantern":"lantern",
  "Snowball":"snowball",
  "Coal":"coal",
  "SpecialCoal":"coal?",
  "Tape":"tape",

  # 914 settings
  "Rough":"rough",
  "Coarse":"coarse",
  "OneToOne":"1:1",
  "VeryFine":"very fine",
  "Fine":"fine",

  # KeycardPermissions
  #"None":"",
  #"Checkpoints":"",
  "ExitGates":"exit gates",
  #"Intercom":"",
  "AlphaWarhead":"Alpha warhead",
  "ContainmentLevelOne":"Containment level 1",
  "ContainmentLevelTwo":"Containment level 2",
  "ContainmentLevelThree":"Containment level 3",
  "ArmoryLevelOne":"Armory level one",
  "ArmoryLevelTwo":"Armory level two",
  "ArmoryLevelThree":"Armory level three",
  "ScpOverride":"SCP-override",

  # Some door things
  "PortallessBreakableDoor":"door",
  "BreakableDoor":"door",
  "\\(Clone\\)":""
]

# Executes on the final version of the message, this is the only regex that affects player names
final_regex: ["discord\\.gg":"","http://":"","https://":"","www\\.":"", "<@":"<", "<@!":"<!"]

messages:
  onroundstart:
    message: "**Round started.**"
    regex: []

  onconnect:
    # ipaddress - string
    # userid - string
    # jointype - CentralAuthPreauthFlags
    # region - string
    message: "Player (<var:userid>) attempting connection..."
    regex: []

  onplayerleave:
    # ipaddress - string
    # playerid - int
    # steamid - string
    # name - string
    message: "**<var:player-name> (<var:player-userid>) left the game.**"
    regex: []

  onroundend:
    # duration - int
    # leadingteam -string
    # dclassalive - int
    # dclassdead - int
    # dclassescaped - int
    # dclassstart - int
    # mtfalive - int
    # mtfdead - int
    # mtfstart - int
    # scientistsalive - int
    # scientistsdead - int
    # scientistsescaped - int
    # scientistsstart - int
    # scpalive - int
    # scpdead - int
    # scpkills - int
    # scpstart - int
    # warheaddetonated - bool
    # warheadkills - int
    # zombiesalive - int
    # zombieschanged - int
    message: >+
      **Round ended after <var:duration> minutes.**
      ```
      Escaped D-class:            <var:dclassescaped>/<var:dclassstart>\n
      Rescued Scientists:         <var:scientistsescaped>/<var:scientistsstart>\n
      Contained SCPs:             <var:scpdead>/<var:scpstart>\n
      Killed by SCP:              <var:scpkills>\n
      Warhead switchwas<var:warheaddetonated> detonated.
      ```
    regex: ["switchwasTrue":"was","switchwasFalse":"was not"]

  onwaitingforplayers:
    message: "**Server is ready and waiting for players.**"
    regex: []

  onroundrestart:
    message: "**Round is restarting...**"
    regex: []

  onsetservername:
    # servername - string
    message: "**Server name: <var:servername>.**"
    regex: []

  onscp914activate:
    # knobsetting - KnobSetting
    # player - Player
    message: "<var:player-name> (<var:player-userid>) activated SCP-914 on the setting <var:knobsetting>."
    regex: []

  onstartcountdown:
    player:
      # isAutomatic - bool
      # timeleft - float
      # player - Player
      initiated:
        message: "**The alpha warhead has been activated by <var:player-name> (<var:player-userid>), <var:timeleft> seconds until detonation. All personnel must evacuate immediately.**"
        regex: [ ]
      resumed:
        message: "**The alpha  warhead countdown has been resumed by <var:player-name> (<var:player-userid>), <var:timeleft> seconds until detonation.**"
        regex: [ ]
    server:
      # isAutomatic - bool
      # timeleft - float
      initiated:
        message: "**The alpha warhead has been remotely activated by order of the O5 Council. All personnel must evacuate immediately.**"
        regex: []
      resumed:
        message: "**The alpha warhead countdown has been remotely resumed by order of the O5 Council. <var:timeleft> seconds left until detonation.**"
        regex: []

  onstopcountdown:
    default:
      # timeleft
      # player - Player
      message: "**The alpha warhead detonation has been canceled by <var:player-name> (<var:player-userid>) with <var:timeleft> seconds left.**"
      regex: []
    noplayer:
      # timeleft
      message: "**The alpha warhead detonation has been canceled remotely by order of the Ethics Committee with <var:timeleft> seconds left.**"
      regex: []

  ondetonate:
    message: "**Detonation of the alpha warhead has been detected. MTF operatives are inbound to clear out any remaining threats.**"
    regex: []

  ondecontaminate:
    message: "**Light Containment Zone de-contamination has been initiated, all biological material will be destroyed.**"
    regex: []

  onsummonvehicle:
    chaos:
      message: "**Warning: Unauthorized vehicle has breached the site perimeter.**"
      regex: []
    mtf:
      message: "**MTF helicopter is in visual range of the site, preparing to land.**"
      regex: []

  ongeneratorfinish:
    # room
    # player - Player
    message: "Generator in <var:room> has been activated."
    regex: [ ]

  onplayerhurt:
    # damage - float
    # damagetype - DamageType
    # attacker - Player
    # playeripaddress - string
    # playername - string
    # playerplayerid - int
    # playersteamid - string
    # playerclass - Role
    # playerteam - Team
    default:
      message: "<var:target-name> (<var:target-userid>) was hurt by <var:attacker-name> (<var:attacker-userid>) using <var:damagetype> (<var:damage> hp)."
      regex: ["using UNKNOWN":"using unknown means", "-1 damage":"immense damage"]
    friendlyfire:
      message: "**<var:target-team> <var:target-name> (<var:target-userid>) was attacked by teammate <var:attacker-team> <var:attacker-name> (<var:attacker-userid>) using <var:damagetype> (<var:damage> hp).**"
      regex: ["using UNKNOWN":"using unknown means", "-1 damage":"immense damage"]
    noattacker:
      message: "<var:target-name> (<var:target-userid>) took <var:damage> damage by <var:damagetype>."
      regex: ["damage by UNKNOWN":"damage from unknown causes", "-1 damage":"immense damage"]

  onplayerdie:
    # damagetype - DamageType
    # attacker - Player
    # playeripaddress - string
    # playername - string
    # playerplayerid - int
    # playersteamid - string
    # playerclass - Role
    # playerteam - Team
    default:
      message: "<var:target-name> (<var:target-userid>) was killed by <var:attacker-name> (<var:attacker-userid>) using <var:damagetype>."
      regex: ["using UNKNOWN":"using unknown means"]
    friendlyfire:
      message: "**<var:target-team> <var:target-name> (<var:target-userid>) was teamkilled by <var:attacker-team> <var:attacker-name> (<var:attacker-userid>) using <var:damagetype>.**"
      regex: ["using UNKNOWN":"using unknown means"]
    nokiller:
      message: "<var:target-name> (<var:target-userid>) died by <var:damagetype>."
      regex: ["died by UNKNOWN":"died in an unknown way"]

  onplayerpickupitem:
    # item - Item
    # player - Player
    message: "<var:player-name> (<var:player-userid>) picked up <var:item>."
    regex: []

  onplayerpickupammo:
    # ammo - Item
    # player - Player
    message: "<var:player-name> (<var:player-userid>) picked up <var:ammo>."
    regex: []

  onplayerpickuparmor:
    # item - Item
    # player - Player
    message: "<var:player-name> (<var:player-userid>) picked up <var:armor>."
    regex: []

  onplayerpickupscp330:
    # player - Player
    message: "<var:player-name> (<var:player-userid>) picked up SCP-330."
    regex: []

  onplayerdropitem:
    # item - Item
    # player - Player
    message: "<var:player-name> (<var:player-userid>) dropped <var:item>."
    regex: []

  onplayerdropammo:
    # ammo - Item
    # amount - int
    # player - Player
    message: "<var:player-name> (<var:player-userid>) dropped <var:amount> <var:ammo>."
    regex: []

  onplayerjoin:
    # player - Player
    message: "**<var:player-name> (<var:player-userid>) joined the game.**"
    regex: []

  onnicknameset:
    # nickname - string
    # player - Player
    message: "Player '<var:player-name> (<var:player-userid>)' set their nickname to <var:nickname>."
    regex: []

  onsetrole:
    # oldrole - Role
    # player - Player
    roundstart:
      message: "<var:player-name> (<var:player-userid>) has spawned as a <var:player-role>."
      regex: [ ]
    latejoin:
      message: "<var:player-name> (<var:player-userid>) has spawned as a <var:player-role> (Latejoin)."
      regex: [ ]
    respawn:
      message: "<var:player-name> (<var:player-userid>) has respawned as a <var:player-role>."
      regex: [ ]
    died:
      message: "<var:player-name> (<var:player-userid>) died and became a <var:player-role>."
      regex: [ ]
    escaped:
      message: "<var:player-name> (<var:player-userid>) has escaped the facility and become a <var:player-role>."
      regex: [ ]
    revived:
      message: "<var:player-name> (<var:player-userid>) was revived as an <var:player-role>."
      regex: [ ]
    remoteadmin:
      message: "<var:player-name> (<var:player-userid>) was changed to <var:player-role> via remote admin."
      regex: [ ]
    left:
      message: "<var:player-name> (<var:player-userid>) left the server."
      regex: [ ]
    other:
      message: "<var:player-name> (<var:player-userid>) has become a <var:player-role>."
      regex: []

  onspawn:
    # player - Player
    message: "<var:player-name> (<var:player-userid>) spawned as <var:player-role>."
    regex: []

  ondooraccess:
    # doorname - string
    # permission - string
    # locked - bool
    # lockcooldown - float
    # open - bool
    # player - Player
    allowed:
      message: "<var:player-name> (<var:player-userid>) isopen:<var:open> a door (<var:doorname>) requiring \"<var:permission>\" permission."
      regex: ["isopen:True":"closed", "isopen:False":"opened", " requiring \"\" permission\\.":"."," requiring \"None\" permission\\.":"."]
    denied:
      message: "<var:player-name> (<var:player-userid>) tried to isopen:<var:open> a locked door (<var:doorname>) requiring \"<var:permission>\" permission."
      regex: ["isopen:True":"close", "isopen:False":"open"," requiring \"\" permission \\.":"."," requiring \"None\" permission\\.":"."]

  onpocketdimensionexit:
    # player - Player
    message: "<var:player-name> (<var:player-userid>) escaped the SCP-106 pocket dimension."
    regex: []

  onpocketdimensionenter:
    # attacker - Player
    # target - Player
    message: "<var:player-name> (<var:player-userid>) was taken into the SCP-106 pocket dimension by <var:attacker-name> (<var:attacker-userid>)."
    regex: []

  onthrowprojectile:
    # type - GrenadeType
    # player - Player
    message: "<var:player-name> (<var:player-userid>) threw a <var:type>."
    regex: []

  onspawnragdoll:
    # damagetype - string
    # player - Player
    message: "<var:player-name> (<var:player-userid>)'s <var:player-role> ragdoll spawned."
    regex: []

  onitemuse:
    # item - string
    # player - Player
    message: "<var:player-name> (<var:player-userid>) used <var:item>."
    regex: []

  onelevatoruse:
    # elevatorname - ElevatorType
    # player - Player
    message: "<var:player-name> (<var:player-userid>) called the <var:elevatorname> elevator."
    regex: []

  onhandcuff:
    # target - Player
    # disarmer - Player
    default:
      message: "<var:target-role> <var:target-name> (<var:target-userid>) was handcuffed by <var:disarmer-role> <var:disarmer-name> (<var:disarmer-userid>)."
      regex: []
    nootherplayer:
      message: "<var:target-role> <var:target-name> (<var:target-userid>) was handcuffed."
      regex: []

  onhandcuffremoved:
    # target - Player
    # disarmer - Player
    default:
      message: "<var:target-role> <var:target-name> (<var:target-userid>) was released by <var:disarmer-role> <var:disarmer-name> (<var:disarmer-userid>)."
      regex: []
    nootherplayer:
      message: "<var:target-role> <var:target-name> (<var:target-userid>) was released."
      regex: []

  onplayertriggertesla:
    # player - Player
    default:
      message: "<var:player-team> <var:player-name> (<var:player-userid>) activated a tesla gate."
      regex: []
    ignored:
      message: "<var:player-team> <var:player-name> (<var:player-userid>) went through a tesla gate without activating it."
      regex: []

  onscp914changeknob:
    # newsetting - KnobSetting
    # oldsetting - KnobSetting
    # player - Player
    message: "<var:player-name> (<var:player-userid>) set the SCP-914 knob to \"<var:newsetting>\"."
    regex: []

  onplayerradioswitch:
    # setting - RadioStatus
    # player - Player
    message: "<var:player-name> (<var:player-userid>) switched their radio to the <var:setting> status."
    regex: []

  onrecallzombie:
    # target - Player
    # player - Player
    message: "<var:target-name> (<var:target-userid>) was revived as an SCP-049-2 instance by <var:player-name> (<var:player-userid>)"
    regex: []

  oncallcommand:
    remoteadmin:
      player:
        # command
        # player - Player
        message: "<var:player-name> (<var:player-userid>) used the command '<var:command>'."
        regex: [ ]
      server:
        # command
        message: "Server used the command '<var:command>'."
        regex: [ ]
    game:
      player:
        # command
        # player - Player
        message: "<var:player-name> (<var:player-userid>) used the command '<var:command>'."
        regex: [ ]
      server:
        # command
        message: "Server used the command '<var:command>'."
        regex: [ ]
    console:
      player:
        # command
        # player - Player
        message: "<var:player-name> (<var:player-userid>) used the command '<var:command>'."
        regex: [ ]
      server:
        # command
        message: "Server used the command '<var:command>'."
        regex: [ ]

  onexecutedcommand:
    remoteadmin:
      player:
        # command
        # result
        # returnmessage
        # player - Player
        message: "<var:player-name> (<var:player-userid>) used the command `<var:command>`:\n```<var:returnmessage>```"
        regex: [ ]
      server:
        # command
        # result
        # returnmessage
        message: "Server used the command `<var:command>`:\n```<var:returnmessage>```"
        regex: [ ]
    game:
      player:
        # command
        # result
        # returnmessage
        # player - Player
        message: "<var:player-name> (<var:player-userid>) used the command `<var:command>`:\n```<var:returnmessage>```"
        regex: [ ]
      server:
        # command
        # result
        # returnmessage
        message: "Server used the command `<var:command>`:\n```<var:returnmessage>```"
        regex: [ ]
    console:
      player:
        # command
        # result
        # returnmessage
        # player - Player
        message: "<var:player-name> (<var:player-userid>) used the command `<var:command>`:\n```<var:returnmessage>```"
        regex: [ ]
      server:
        # command
        # result
        # returnmessage
        message: "Server used the command `<var:command>`:\n```<var:returnmessage>```"
        regex: [ ]

  onreload:
    # weapon
    # maxclipsize
    # player - Player
    message: "<var:player-name> (<var:player-userid>) reloaded their <var:weapon>."
    regex: []

  ongrenadeexplosion:
    # player - Player
    message: "<var:player-name> (<var:player-userid>)'s grenade exploded."
    regex: []

  ongrenadehitplayer:
    # player - Player
    # target - Player
    message: "<var:player-name> (<var:player-userid>)'s grenade hit <var:target-name> (<var:target-userid>)"
    regex: []

  ongeneratorunlock:
    # engaged - bool
    # activating - bool
    # locked - bool
    # open - bool
    # room - RoomType
    # starttime - float
    # timeleft - float
    # player - Player
    message: "<var:player-name> (<var:player-userid>) unlocked a generator in <var:room>."
    regex: [
      "Micro-HID":"the Micro-HID room",
      "nuke":"the nuke silo" ]

  ongeneratorclose:
    # engaged - bool
    # activating - bool
    # locked - bool
    # open - bool
    # room - RoomType
    # starttime - float
    # timeleft - float
    # player - Player
    message: "<var:player-name> (<var:player-userid>) closed a generator in <var:room>."
    regex: [
      "Micro-HID":"the Micro-HID room",
      "nuke":"the nuke silo" ]

  ongeneratoropen:
    # engaged - bool
    # activating - bool
    # locked - bool
    # open - bool
    # room - RoomType
    # starttime - float
    # timeleft - float
    # player - Player
    message: "<var:player-name> (<var:player-userid>) opened a generator in <var:room>."
    regex: [
      "Micro-HID":"the Micro-HID room",
      "nuke":"the nuke silo" ]

  ongeneratoractivated:
    # engaged - bool
    # activating - bool
    # locked - bool
    # open - bool
    # room - RoomType
    # starttime - float
    # timeleft - float
    # player - Player
    message: "<var:player-name> (<var:player-userid>) activated a generator in <var:room>."
    regex: [
      "Micro-HID":"the Micro-HID room",
      "nuke":"the nuke silo" ]

  ongeneratordeactivated:
    # engaged - bool
    # activating - bool
    # locked - bool
    # open - bool
    # room - RoomType
    # starttime - float
    # timeleft - float
    # player - Player
    message: "The generator in <var:room> was deactivated."
    regex: [
      "Micro-HID":"the Micro-HID room",
      "nuke":"the nuke silo" ]

  on079lockdoor:
    # open - bool
    # door - string
    # apdrain - float
    # player - Player
    message: "<var:player-name> (<var:player-userid>) locked a door as SCP-079."
    regex: []

  on079teslagate:
    # apdrain - float
    # player - Player
    message: "<var:player-name> (<var:player-userid>) activated a tesla gate."
    regex: []

  on079addexp:
    # xptype - ExperienceType
    # amount - float
    # player - Player
    message: "<var:player-name> (<var:player-userid>) got <var:amount> xp."
    regex: []

  on079levelup:
    # level - int
    # player - Player
    message: "<var:player-name> (<var:player-userid>) leveled up as SCP-079."
    regex: []

  on079unlockdoor:
    # doorname - string
    # player - Player
    message: "<var:player-name> (<var:player-userid>) locked a <var:doorname> door."
    regex: []

  on079lockdown:
    # room - RoomType
    # apdrain - float
    # player - Player
    message: "<var:player-name> (<var:player-userid>) has locked down <var:room>."
    regex: [
      "Micro-HID":"the Micro-HID room",
      "nuke":"the nuke silo" ]

  on079cancellockdown:
    # room - RoomType
    # apdrain - float
    # player - Player
    message: "<var:player-name> (<var:player-userid>) has cancelled lockdown in <var:room>."
    regex: [
      "Micro-HID":"the Micro-HID room",
      "nuke":"the nuke silo" ]

  onban:
    player:
      # duration - int
      # reason - string
      # player - Player
      # issuer - Player
      message: "**Player <var:player-name> (<var:player-userid>) was banned by <var:issuername> (<var:issuersteamid>) for `<var:duration>`. Reason: <var:reason>**"
      regex: [ ]
    server:
      # duration - int
      # reason - string
      # playeripaddress - string
      # playername - string
      # playerplayerid - int
      # playersteamid - string
      # playerclass - Role
      # playerteam - Team
      message: "**Player <var:player-name> (<var:player-userid>) was banned by the server for `<var:duration>`. Reason: <var:reason>**"
      regex: []

  onbanissued:
    # duration
    # expirytime
    # issuedtime
    # reason
    # playerip
    # playername
    # issuername
    ip:
      message: >+
        **IP-ban issued**
        ```
        Player:    <var:player-name>\n
        IP:        <var:playerip>\n
        Issued:    <var:issuedtime>\n
        Expires:   <var:expirytime>\n
        Duration:  <var:duration>\n
        Issuer:    <var:issuername>\n
        Reason:    <var:reason>
        ```
      regex: []
    # duration
    # expirytime
    # issuedtime
    # reason
    # playeruserid
    # playername
    # issuername
    userid:
      message: >+
        **UserID-ban issued**
        ```
        Player:    <var:player-name>\n
        UserID:    <var:playeruserid>\n
        Issued:    <var:issuedtime>\n
        Expires:   <var:expirytime>\n
        Duration:  <var:duration>\n
        Issuer:    <var:issuername>\n
        Reason:    <var:reason>
        ```
      regex: []

  onbanupdated:
    # duration
    # expirytime
    # issuedtime
    # reason
    # playerip
    # playername
    # issuername
    ip:
      message: >+
        **IP-ban updated**
        ```
        Player:    <var:player-name>\n
        IP:        <var:playerip>\n
        Issued:    <var:issuedtime>\n
        Expires:   <var:expirytime>\n
        Duration:  <var:duration>\n
        Issuer:    <var:issuername>\n
        Reason:    <var:reason>
        ```
      regex: []
    # duration
    # expirytime
    # issuedtime
    # reason
    # playeruserid
    # playername
    # issuername
    userid:
      message: >+
        **UserID-ban updated**
        ```
        Player:    <var:player-name>\n
        UserID:    <var:playeruserid>\n
        Issued:    <var:issuedtime>\n
        Expires:   <var:expirytime>\n
        Duration:  <var:duration>\n
        Issuer:    <var:issuername>\n
        Reason:    <var:reason>
        ```
      regex: []

  onbanrevoked:
    # ip
    ip:
      message: "**IP-ban '<var:ip>' revoked.**"
      regex: []
    # userid
    userid:
      message: "**UserID-ban '<var:userid>' revoked.**"
      regex: []

  onkick:
    player:
      # reason - string
      # player - Player
      # issuer - Player
      message: "**Player <var:player-name> (<var:player-userid>) was kicked by <var:issuername> (<var:issuersteamid>). Reason: <var:reason>**"
      regex: [ ]
    server:
      # reason - string
      # playeripaddress - string
      # playername - string
      # playerplayerid - int
      # playersteamid - string
      # playerclass - Role
      # playerteam - Team
      message: "**Player <var:player-name> (<var:player-userid>) was kicked by the server. Reason: <var:reason>**"
      regex: []

  onplayermuted:
    player:
      intercom:
        # player - Player
        # issuer - Player
        message: "**<var:player-name> (<var:player-userid>) was intercom-muted by <var:issuername> (<var:issuersteamid>).**"
        regex: []
      standard:
        # player - Player
        # issuer - Player
        message: "**<var:player-name> (<var:player-userid>) was muted by <var:issuername> (<var:issuersteamid>).**"
        regex: []
    server:
      intercom:
        # player - Player
        message: "**<var:player-name> (<var:player-userid>) was intercom-muted by the server.**"
        regex: []
      standard:
        # player - Player
        message: "**<var:player-name> (<var:player-userid>) was muted by the server.**"
        regex: []

  onplayerunmuted:
    player:
      intercom:
        # player - Player
        # issuer - Player
        message: "**<var:player-name> (<var:player-userid>) was intercom-unmuted by <var:issuername> (<var:issuersteamid>).**"
        regex: []
      standard:
        # player - Player
        # issuer - Player
        message: "**<var:player-name> (<var:player-userid>) was unmuted by <var:issuername> (<var:issuersteamid>).**"
        regex: []
    server:
      intercom:
        # player - Player
        message: "**<var:player-name> (<var:player-userid>) was intercom-unmuted by the server.**"
        regex: []
      standard:
        # player - Player
        message: "**<var:player-name> (<var:player-userid>) was unmuted by the server.**"
        regex: []

  onteamrespawn:
    # players - List<Player>
    # spawnchaos - bool
    mtf:
      message: "**Mobile Task Force Epsilon-11 designated Nine-Tailed Fox has entered the facility.**"
      regex: []
    ci:
      message: "**Facility incursion detected, intruders identified as members of hostile GOI \"Chaos Insurgency\".**"
      regex: []

  onplayerescape:
    # newclass - Role
    # player - Player
    message: "<var:player-name> (<var:player-userid>) has escaped and become a <var:newclass>"
    regex: []

  onplayercheaterreport:
    # player - Player
    # target - Player
    # reason - string
    message: "**<var:player-name> (<var:player-userid>) reported <var:target-name> (<var:target-userid>) as a cheater:**\n```<var:reason>```"
    regex: []

  onplayerreport:
    # player - Player
    # target - Player
    # reason - string
    message: "**<var:player-name> (<var:player-userid>) reported <var:target-name> (<var:target-userid>) for breaking server rules:**\n```<var:reason>```"
    regex: []

  #####################################################################################################################
  #                                                                                                                   #
  #                                                   DISCORD BOT                                                     #
  #                                                                                                                   #
  #   message: The message to be displayed. Variables are inserted in the format <var:name>, such as <var:ipaddress>. #
  #   regex: A regular expression paired with a replacement string to find and replace parts of a message.            #
  #                                                                                                                   #
  #####################################################################################################################

  connectedtobot:
    message: "**SCP:SL server connected.**"
    regex: []

  invalidsteamid:
    # userid - string
    message: "Invalid SteamID '<var:userid>'."
    regex: []

  invalidsteamidorip:
    # steamidorip - string
    message: "Invalid SteamID or IP '<var:steamidorip>'."
    regex: []

  invalidduration:
    # duration - string
    message: "Invalid duration '<var:duration>'."
    regex: []

  playernotfound:
    # userid - string
    message: "Player with SteamID '<var:userid>' not found."
    regex: []

  playerkicked:
    # name - string
    # userid - string
    # admintag - string
    message: "'<var:name>' (<var:userid>) was kicked from the server by <var:admintag>."
    regex: []

  playerbanned:
    # name - string
    # userid - string
    # reason - string
    # duration - string
    # admintag - string
    message: "'<var:name>' (<var:player-userid>) was banned from the server by <var:admintag> for the reason '<var:reason>' (<var:duration>)."
    regex: []

  playerunbanned:
    # steamidorip - string
    message: "All entries with SteamID/IP '<var:steamidorip>' have been cleared from the ban lists."
    regex: []

  playermuted:
    # name - string
    # userid - string
    # reason - string
    # duration - string
    # admintag - string
    message: "<var:name> "
    regex: []

  playertempmuted:
    # name - string
    # userid - string
    # reason - string
    # duration - string
    # admintag - string
    message: "<var:name>"
    regex: []

  mutefailed:
    # name - string
    # userid - string
    # reason - string
    # duration - string
    # admintag - string
    message: "<var:name>"
    regex: []

  playerunmuted:
    # name - string
    # userid - string
    # reason - string
    # duration - string
    # admintag - string
    message: "<var:name>"
    regex: []

  unmutefailed:
    # name - string
    # userid - string
    # reason - string
    # duration - string
    # admintag - string
    message: "<var:name>"
    regex: []

  kickall:
    # reason - string
    # admintag - string
    message: "All players have been kicked from the server by <var:admintag> with the reason '<var:reason>'."
    regex: []

  # The feedback from a console command, except the custom ones above. (Is not affected by global regex other than final_regex)
  consolecommandfeedback:
    # feedback - string
    message: "<var:feedback>"
    regex: []

  botstatus:
    # players - int
    # maxplayers - int
    message: "<var:players> / <var:maxplayers>"
    regex: []

  listtitle:
    # players
    # maxplayers
    message: "<var:players> / <var:maxplayers> players"
    regex: []

  listrow:
    default:
      # player - Player
      message: "**<var:player-name>** | **<var:player-role>** | `<var:player-userid>` \n"
      regex: []
    empty:
      message: "No players online."
